<?php

use Drupal\Core\Config\Entity\ConfigEntityInterface;
use Drupal\Core\Entity\EntityFormInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function builder_notes_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $matching_forms = [
    'entity_form_display_edit_form',
    'entity_view_display_edit_form',
    'field_config_edit_form',
    'field_storage_config_edit_form',
    'node_type_edit_form',
    'user_role_form',
    'image_style_edit_form',
    'responsive_image_style_edit_form',
  ];

  if (!in_array($form_id, $matching_forms, TRUE)) {
    return;
  }

  $form_object = $form_state->getFormObject();
  if (!($form_object instanceof EntityFormInterface)) {
    return;
  }

  $entity = $form_object->getEntity();
  if (!($entity instanceof ConfigEntityInterface)) {
    return;
  }

  $form['notes'] = [
    '#type' => 'details',
    '#title' => t('Builder Notes'),
    '#group' => 'additional_settings',
  ];

  $form['notes']['builder_notes'] = [
    '#type' => 'textarea',
    '#title' => t('Builder Notes'),
    '#parents' => ['builder_notes'],
    '#description' => t('Notes for site builders.'),
    '#default_value' => $entity->getThirdPartySetting('builder_notes', 'notes'),
  ];

  $form['#entity_builders'][] = 'builder_notes_display_entity_builder';
}

/**
 * Entity builder to set values on form submit.
 */
function builder_notes_display_entity_builder($entity_type, ConfigEntityInterface $config_entity, &$form, FormStateInterface $form_state) {
  $config_entity->setThirdPartySetting('builder_notes', 'notes', $form_state->getValue('builder_notes'));
}
